{"version":3,"sources":["images/image.png","components/Cards/Cards.component.jsx","api/covid19.api.js","components/Chart/Chart.component.jsx","components/CountryPicker/CountryPicker.component.jsx","components/Footer/FooterPage.component.jsx","App.js","index.js"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","xs","md","component","Card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchApiData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","FooterPage","fluid","getFullYear","rel","href","App","state","fetchedData","setState","this","src","covid19Img","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,mC,gVCiE5BC,G,OA5DF,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAClD,OAAKH,EAKD,yBAAKI,UAAU,aACX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAChC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMT,UAAU,iBACjD,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKN,UAAU,MAC/B,kBAAC,IAAD,CAASO,MAAO,EAAGC,IAAKpB,EAAUqB,MAAOC,SAAU,KAAMC,UAAU,OAEvE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACb,IAAIQ,KAAKrB,GAAYsB,gBAE1B,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQN,UAAU,KAAtC,yCAKR,kBAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMT,UAAW,kBAClD,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKN,UAAU,MAC/B,kBAAC,IAAD,CAASO,MAAO,EAAGC,IAAKnB,EAAUoB,MAAOC,SAAU,KAAMC,UAAU,OAEvE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACb,IAAIQ,KAAKrB,GAAYsB,gBAE1B,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQN,UAAU,KAAtC,yCAKR,kBAACP,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMT,UAAU,eACjD,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKN,UAAU,MAC/B,kBAAC,IAAD,CAASO,MAAO,EAAGC,IAAKlB,EAAOmB,MAAOC,SAAU,KAAMC,UAAU,OAEpE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACb,IAAIQ,KAAKrB,GAAYsB,gBAE1B,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAQN,UAAU,KAAtC,4CAjDT,4B,iCCLTc,EAAG,iCAEIC,EAAY,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACtBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJZ,kBAQ6CG,IAAMC,IAAIF,GARvD,2BAQhB/B,KAAQC,EARQ,EAQRA,UAAWC,EARH,EAQGA,UAAWC,EARd,EAQcA,OAAQC,EARtB,EAQsBA,WARtB,kBAUjB,CAAEH,YAAWC,YAAWC,SAAQC,eAVf,2HAAH,sDAgBZ8B,EAAc,uCAAG,8BAAAJ,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElB3B,EAFkB,EAElBA,KAFkB,kBAInBA,EAAKmC,KAAI,gBAAGlC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAA+BiC,GAA7C,EAAsBlC,UAAtB,EAAiCmC,YAAjC,MAAyD,CAAEpC,UAAWA,EAAUqC,MAAOnC,OAAQA,EAAOmC,MAAOF,YAJnG,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAT,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVa,EAFU,EAElBxC,KAAQwC,UAFU,kBAInBA,EAAUL,KAAI,SAACN,GAAD,OAAaA,EAAQY,SAJhB,wHAAH,qDCyCZC,G,OAhED,SAAC,GAAyD,IAAD,IAAtD1C,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAU0B,EAAc,EAAdA,QAAc,EACnCc,mBAAS,IAD0B,mBAC9DC,EAD8D,KACnDC,EADmD,KAIrEC,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,sEACcI,IADd,OACXa,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJhD,EACE,kBAAC,IAAD,CACED,KAAM,CACJkD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClErD,KAAM,CAACC,EAAUqB,MAAOpB,EAAUoB,MAAOnB,EAAOmB,UAItDgC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB7B,OAGpD,KAGA8B,EACJf,EAAU,GACR,kBAAC,IAAD,CACE5C,KAAM,CACJkD,OAAQN,EAAUT,KAAI,qBAAGC,QACzBe,SAAU,CAAC,CACTnD,KAAM4C,EAAUT,KAAI,SAACnC,GAAD,OAAUA,EAAKC,aACnCmD,MAAO,WACPQ,YAAa,UACbC,MAAM,GACL,CACD7D,KAAM4C,EAAUT,KAAI,SAACnC,GAAD,OAAUA,EAAKG,UACnCiD,MAAO,SACPQ,YAAa,MACbP,gBAAiB,uBACjBQ,MAAM,OAIV,KAGN,OACE,yBAAKxD,UAAU,aACZwB,EAAUoB,EAAWU,K,kBCtCbG,G,OArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACXpB,mBAAS,IADE,mBACtCH,EADsC,KAC3BwB,EAD2B,KAW7C,OARAlB,qBAAU,YACM,uCAAG,sBAAAhB,EAAA,kEACfkC,EADe,SACIzB,IADJ,6EAAH,qDAId0B,KACC,IAGD,kBAACC,EAAA,EAAD,CAAa7D,UAAU,eACrB,kBAAC8D,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOjD,SAC1E,4BAAQA,MAAM,IAAd,UACCkB,EAAUL,KAAI,SAACN,EAAS2C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGlD,MAAOO,GAAUA,U,QCNzD6C,G,OAZI,WACjB,OACE,kBAAC,IAAD,CAAWzD,MAAM,OAAOZ,UAAU,wBAChC,yBAAKA,UAAU,4CACb,kBAAC,IAAD,CAAcsE,OAAK,GAAnB,SACU,IAAIlD,MAAOmD,cADrB,2BACiD,uBAAGC,IAAI,GAAGN,OAAO,SAASO,KAAK,4BAA/B,YADjD,wBACkI,uBAAGP,OAAO,SAASO,KAAK,6CAAxB,kB,2BCgC3HC,E,4MA/BXC,MAAQ,CACJhF,KAAM,GACN6B,QAAS,I,EASbkC,oB,uCAAsB,WAAMlC,GAAN,eAAAC,EAAA,sEACQF,EAAaC,GADrB,OACZoD,EADY,OAGlB,EAAKC,SAAS,CAAElF,KAAMiF,EAAapD,QAASA,IAH1B,2C,wPALQD,I,OAApBqD,E,OAENE,KAAKD,SAAS,CAAElF,KAAMiF,I,qIAShB,IAAD,EACqBE,KAAKH,MAAvBhF,EADH,EACGA,KAAM6B,EADT,EACSA,QACd,OACI,yBAAKxB,UAAU,aACX,yBAAKA,UAAU,QAAQ+E,IAAKC,IAAYC,IAAI,aAC5C,kBAAC,EAAD,CAAOtF,KAAMA,IACb,kBAAC,EAAD,CAAe+D,oBAAqBoB,KAAKpB,sBACzC,kBAAC,EAAD,CAAO/D,KAAMA,EAAM6B,QAASA,IAC5B,kBAAC,EAAD,W,GA3BE0D,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6d8b13fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport './Cards.styles.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading... ðŸ”ƒ';\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} md={3} component={Card} className='card infected'>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Infected\r\n            </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of active cases of COVID-19.\r\n            </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className= 'card recovered'>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n            </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of recoveries from COVID-19.\r\n            </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className='card deaths'>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n            </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of deaths caused by COVID-19.\r\n            </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url = `https://covid19.mathdro.id/api`;\r\n\r\nexport const fetchApiData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, recovered, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api/covid19.api';\r\n\r\nimport './Chart.styles.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          }],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className='container'>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api/covid19.api';\r\n\r\nimport './CountryPicker.styles.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className='formControl'>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from \"react\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\nimport './FooterPage.styles.css';\r\n\r\nconst FooterPage = () => {\r\n  return (\r\n    <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\r\n      <div className=\"credit footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} ðŸŒˆ Design by <a rel='' target=\"_blank\" href=\"https://github.com/lgope\">Lakshman</a> ðŸ”— API By <a target=\"_blank\" href=\"https://github.com/mathdroid/covid-19-api\">Mathdroid</a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default FooterPage;","import React, { Component } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker, FooterPage } from './components';\r\nimport './App.styles.css';\r\nimport { fetchApiData } from './api/covid19.api';\r\n\r\nimport covid19Img from './images/image.png'\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchApiData();\r\n\r\n        this.setState({ data: fetchedData })\r\n    }\r\n\r\n    handleCountryChange = async country => {\r\n        const fetchedData = await fetchApiData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className='container'>\r\n                <img className='image' src={covid19Img} alt='COVID-19' />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n                <FooterPage />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}